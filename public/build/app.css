/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
@font-face {
  font-family: "Baroque";
  src: url(/build/fonts/BaroqueScript.d1ef5c7f.ttf);
}
@font-face {
  font-family: "Spectral";
  src: url(/build/fonts/Spectral-Regular.3a67fe9e.ttf);
  font-weight: 400;
}
@font-face {
  font-family: "SpectralBold";
  src: url(/build/fonts/Spectral-Bold.c8ae2642.ttf);
  font-weight: 800;
}
@font-face {
  font-family: "SpectralLight";
  src: url(/build/fonts/Spectral-ExtraLightItalic.f2a93040.ttf);
  font-weight: 100;
}
@font-face {
  font-family: "Cinzel";
  src: url(/build/fonts/CinzelDecorative-Regular.c243877d.ttf);
  font-weight: 400;
}
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  list-style: none;
  text-decoration: none;
}

body {
  font-family: "Spectral";
  background-image: url(/build/images/original-black-leather-texture-background.d7509c96.jpg);
  background-position: center, center;
  background-size: contain;
  background-repeat: repeat;
  margin: 0;
  padding: 0;
}

main {
  padding: 8rem;
}

h1 {
  font-family: "Baroque";
  color: #C9A74E;
  font-size: 2.7rem;
  text-align: center;
}

h2 {
  font-size: 2rem;
  font-family: "Cinzel";
  color: #E5D8C5;
  margin-top: -1rem;
  text-align: center;
  margin-bottom: 4rem;
}

h3 {
  color: #E5D8C5;
  font-size: 1.5rem;
}

p {
  font-size: 1.1rem;
}

.logo-link {
  display: block;
  width: 100px;
}

.flash-success {
  background-color: rgba(202, 96, 46, 0.2);
  border-left: 5px solid #C9A74E;
  color: #E5D8C5;
  padding: 1rem 1.5rem;
  margin: 1rem auto;
  border-radius: 8px;
  font-weight: bold;
  max-width: 800px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  font-family: "Cinzel";
  text-align: center;
}

.flash-error {
  background-color: rgba(202, 96, 46, 0.2);
  border-left: 5px solid #C9A74E;
  color: #E5D8C5;
  padding: 1rem 1.5rem;
  margin: 1rem auto;
  border-radius: 8px;
  font-weight: bold;
  max-width: 800px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  font-family: "Cinzel";
  text-align: center;
}

.btn {
  --border-color: linear-gradient(-45deg, #7E1E1E, #C9A74E );
  --border-width: 0.125em;
  --curve-size: 0.5em;
  --blur: 30px;
  --bg: #080312;
  --color: #E5D8C5;
  color: var(--color);
  cursor: pointer;
  /* use position: relative; so that BG is only for .btn */
  position: relative;
  isolation: isolate;
  display: inline-grid;
  place-content: center;
  padding: 0.5em 1.5em;
  font-size: 17px;
  border: 0;
  text-transform: uppercase;
  box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.6);
  clip-path: polygon(0% var(--curve-size), var(--curve-size) 0, 100% 0, 100% calc(100% - var(--curve-size)), calc(100% - var(--curve-size)) 100%, 0 100%);
  transition: color 250ms;
}

.btn::after,
.btn::before {
  content: "";
  position: absolute;
  inset: 0;
}

.btn::before {
  background: var(--border-color);
  background-size: 300% 300%;
  animation: move-bg7234 5s ease infinite;
  z-index: -2;
}

.btn::after {
  background: var(--bg);
  z-index: -1;
  clip-path: polygon(var(--border-width) calc(var(--curve-size) + var(--border-width) * 0.5), calc(var(--curve-size) + var(--border-width) * 0.5) var(--border-width), calc(100% - var(--border-width)) var(--border-width), calc(100% - var(--border-width)) calc(100% - (var(--curve-size) + var(--border-width) * 0.5)), calc(100% - (var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width)), var(--border-width) calc(100% - var(--border-width)));
  transition: clip-path 500ms;
}

.btn:where(:hover, :focus)::after {
  clip-path: polygon(calc(100% - var(--border-width)) calc(100% - (var(--curve-size) + var(--border-width) * 0.5)), calc(100% - var(--border-width)) var(--border-width), calc(100% - var(--border-width)) var(--border-width), calc(100% - var(--border-width)) calc(100% - (var(--curve-size) + var(--border-width) * 0.5)), calc(100% - (var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width)), calc(100% - (var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width)));
  transition: 200ms;
}

.chaises-container {
  display: flex;
  gap: 2rem;
  flex-wrap: wrap;
  justify-content: center;
  background-image: url(/build/images/close-up-fabric-texture-detail.d54dd935.jpg);
  background-position: center, center;
  background-size: cover;
  border-radius: 50px;
  padding: 5rem;
  margin-top: 2rem;
}
.chaises-container .chaise-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  text-align: center;
  gap: 2rem;
  width: 22%;
  padding: 2rem;
  border-radius: 12px;
  background: linear-gradient(to top, #C9A74E, #E5D8C5);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease, box-shadow 0.3s ease, filter 0.3s ease;
}
.chaises-container .chaise-card h3 {
  margin: 0;
  font-size: 1.2rem;
  color: #38302E;
}
.chaises-container .chaise-card .chaise-image {
  width: 60%;
  border-radius: 50%;
}
.chaises-container .chaise-card:hover {
  transform: translateY(-10px) scale(1.02);
  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.4);
  filter: brightness(1.05);
}

form {
  font-family: "Spectral";
  max-width: 800px;
  margin: 0 auto;
  background: linear-gradient(to top, #C9A74E 5%, #E5D8C5 95%);
  padding: 3rem;
  border-radius: 12px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
}
form .form-group {
  margin-bottom: 2rem;
}
form .form-label {
  display: block;
  font-weight: bold;
  margin-bottom: 0.5rem;
  color: #38302E;
}
form .form-input, form textarea, form select {
  width: 100%;
  padding: 0.75rem;
  border-radius: 8px;
  border: 1px solid #38302E;
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1rem;
  font-family: "Spectral";
  color: #38302E;
}
form .form-input:focus, form textarea:focus, form select:focus {
  outline: none;
  border-color: #7E1E1E;
  box-shadow: 0 0 5px #7E1E1E;
}

.form-delete {
  all: unset;
}

input[type=file] {
  display: block;
  margin-top: 0.5rem;
  margin-bottom: 1rem;
  padding: 0.5rem;
  border: 2px dashed #38302E;
  border-radius: 8px;
  background-color: rgba(255, 255, 255, 0.8);
  color: #38302E;
  font-family: "Spectral";
  cursor: pointer;
  transition: border-color 0.3s ease;
}
input[type=file]:hover {
  border-color: #C9A74E;
}

.checkbox-group input[type=checkbox] {
  display: none;
}

.checkbox-group label {
  display: inline-block;
  margin: 5px;
  padding: 10px 15px;
  background-color: #E5D8C5;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.checkbox-group input[type=checkbox]:checked + label {
  background-color: #C9A74E;
  color: white;
}

.login-action {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 1rem;
}
.login-action .btn {
  margin-right: 1rem;
}
.login-action .mdp {
  font-size: 0.9rem;
  color: #38302E;
  text-decoration: underline;
  transition: color 0.3s;
}
.login-action .mdp:hover {
  color: #7E1E1E;
}

.check {
  cursor: pointer;
  position: relative;
  width: 18px;
  height: 18px;
  -webkit-tap-highlight-color: transparent;
  transform: translate3d(0, 0, 0);
}

.check:before {
  content: "";
  position: absolute;
  top: -15px;
  left: -15px;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: rgba(34, 50, 84, 0.03);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.check svg {
  position: relative;
  z-index: 1;
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke: #38302E;
  stroke-width: 1.5;
  transition: all 0.2s ease;
}

.check svg path {
  stroke-dasharray: 60;
  stroke-dashoffset: 0;
}

.check svg polyline {
  stroke-dasharray: 22;
  stroke-dashoffset: 66;
}

.check:hover:before {
  opacity: 1;
}

.check:hover svg {
  stroke: var(--accent-color, #7E1E1E);
}

#cbx2:checked + .check svg {
  stroke: var(--accent-color, #7E1E1E);
}

#cbx2:checked + .check svg path {
  stroke-dashoffset: 60;
  transition: all 0.3s linear;
}

#cbx2:checked + .check svg polyline {
  stroke-dashoffset: 42;
  transition: all 0.2s linear;
  transition-delay: 0.15s;
}

.remember-text {
  cursor: pointer;
  font-family: #38302E;
}

@keyframes move-bg7234 {
  0% {
    background-position: 31% 0%;
  }
  50% {
    background-position: 70% 100%;
  }
  100% {
    background-position: 31% 0%;
  }
}
nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: fixed;
  width: 100%;
  backdrop-filter: blur(8px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-bottom: 3px solid #38302E;
  padding: 1rem 2rem;
  z-index: 10;
}
nav .left-side {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-left: 6rem;
}
nav .left-side .logo-link {
  display: block;
  width: 60px;
  transition: transform 0.9s ease;
}
nav .left-side .logo-link img {
  width: 100%;
  height: auto;
  transition: transform 0.9s ease;
}
nav .left-side .logo-link:hover img {
  transform: rotateY(180deg) scale(1.1);
  filter: drop-shadow(0 0 8px #C9A74E);
}
nav .left-side .hello {
  color: #C9A74E;
  font-size: 1.1rem;
}
nav .main-nav {
  display: flex;
  align-items: center;
  margin-right: 6rem;
  gap: 2rem;
}
nav .main-nav a {
  color: #C9A74E;
  text-decoration: none;
  font-size: 1.2rem;
  border: none;
  background: none;
}
nav .main-nav a::before {
  margin-left: auto;
}
nav .main-nav a::after, nav .main-nav a::before {
  content: "";
  width: 0%;
  height: 2px;
  background: linear-gradient(to right, #C9A74E, #7E1E1E);
  display: block;
  transition: 0.5s;
}
nav .main-nav a:hover::after, nav .main-nav a:hover::before {
  width: 100%;
}

.burger {
  display: none;
  flex-direction: column;
  cursor: pointer;
  gap: 0.4rem;
}
.burger span {
  width: 25px;
  height: 3px;
  background-color: white;
  border-radius: 2px;
  transition: all 0.3s ease;
}
.burger.open span:nth-child(1) {
  transform: rotate(45deg) translate(5px, 5px);
}
.burger.open span:nth-child(2) {
  opacity: 0;
}
.burger.open span:nth-child(3) {
  transform: rotate(-45deg) translate(5px, -5px);
}

footer {
  text-align: center;
  color: #C9A74E;
  font-family: "SpectralLight";
  backdrop-filter: blur(8px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-top: 3px solid #38302E;
  padding: 1rem 2rem;
}

header h2 {
  font-size: 1rem;
}

.description__wrapper {
  text-align: center;
  display: flex;
  justify-content: center;
  margin-bottom: 4rem;
}
.description__wrapper p {
  width: 50%;
  color: #E5D8C5;
  font-style: italic;
}
.description__wrapper p .title-span {
  color: #C9A74E;
  font-family: "Baroque";
}

.galerie__wrapper .card-actions {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.chaise__wrapper {
  background: linear-gradient(to top, #C9A74E 5%, #E5D8C5 80%);
  border-radius: 12px;
  padding: 4rem;
  margin: 4rem auto;
  max-width: 1000px;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4);
  color: #38302E;
  font-family: "Spectral";
}
.chaise__wrapper h3 {
  font-family: "Cinzel";
  color: #38302E;
  font-size: 2rem;
  margin-bottom: 1rem;
  text-transform: uppercase;
}
.chaise__wrapper p {
  font-size: 1.1rem;
  margin-bottom: 1rem;
  color: #38302E;
}
.chaise__wrapper img {
  max-width: 300px;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
  margin: 2rem auto;
  display: block;
}
.chaise__wrapper .card-actions {
  display: flex;
  flex-direction: column;
  margin: 2rem;
  justify-content: center;
  align-items: center;
}
.chaise__wrapper .commentaire {
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(4px);
  border-left: 4px solid #C9A74E;
  padding: 1rem;
  margin-bottom: 1rem;
  border-radius: 8px;
  text-align: left;
}
.chaise__wrapper .commentaire p {
  font-style: italic;
}
.chaise__wrapper .commentaire small {
  display: block;
  text-align: right;
  color: #38302E;
  font-size: 0.9rem;
}
.chaise__wrapper form textarea {
  width: 100%;
  min-height: 100px;
  padding: 1rem;
  border-radius: 8px;
  border: 1px solid #38302E;
  resize: vertical;
  background-color: rgba(110, 89, 89, 0.274);
}
.chaise__wrapper form .btn {
  margin-top: 1rem;
}
.chaise__wrapper .connexion {
  color: #7E1E1E;
}
.chaise__wrapper .connexion:hover {
  text-decoration: underline;
}

.chaise__wrapper #note-form {
  all: unset;
  display: block;
}

.rating-stars {
  display: flex;
  align-items: center;
  gap: 0.3rem;
  margin-bottom: 0.5rem;
}

.star-btn {
  background: none;
  border: none;
  font-size: 1.8rem;
  color: #ccc;
  cursor: pointer;
  transition: color 0.2s;
  padding: 0;
}

.star-btn.active {
  color: #f5c518;
}

.star-btn:hover,
.star-btn:focus {
  color: #f5c518;
  outline: none;
}

.stars {
  display: flex;
  align-items: center;
  gap: 0.3rem;
  margin-bottom: 0.5rem;
}

.stars .star {
  font-size: 1.8rem;
  color: #ccc;
}

.stars .star.active {
  color: #f5c518;
}

.stars .star.half {
  color: #f5e291;
}

.stars span {
  font-size: 1rem;
  color: #666;
  margin-left: 0.4rem;
}

.star-btn.hover {
  color: #f5c518;
}

@media screen and (max-width: 1400px) {
  .chaises-container {
    flex-direction: column;
    padding: 2rem;
  }
  .chaises-container .chaise-card {
    width: 100%;
  }
  main {
    padding: 2rem;
    padding-top: 8rem;
  }
  nav .main-nav {
    display: none;
    flex-direction: column;
    background-color: rgba(0, 0, 0, 0.8);
    position: absolute;
    top: 100%;
    right: 0;
    width: 100%;
    text-align: center;
    padding: 1rem;
  }
  .main-nav.active {
    display: flex;
    margin-right: 0;
  }
  .burger {
    display: flex;
  }
}
@media screen and (max-width: 768px) {
  .description__wrapper p {
    width: 100%;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmNzcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtFQUNJO0VBQ0E7QUNDSjtBREVBO0VBQ0k7RUFDQTtFQUNBO0FDQUo7QURHQTtFQUNJO0VBQ0E7RUFDQTtBQ0RKO0FESUE7RUFDSTtFQUNBO0VBQ0E7QUNGSjtBRE1BO0VBQ0k7RUFDQTtFQUNBO0FDSko7QUNyQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FEdUJKOztBQ3BCQTtFQUNJLHVCQ1JXO0VEU1g7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FEdUJKOztBQ3BCQTtFQUNJO0FEdUJKOztBQ3BCQTtFQUNJLHNCQ3ZCUztFRHdCVCxjQ2xCUztFRG1CVDtFQUNBO0FEdUJKOztBQ3BCQTtFQUNJO0VBQ0EscUJDN0JNO0VEOEJOLGNDeEJlO0VEeUJmO0VBQ0E7RUFDQTtBRHVCSjs7QUNwQkE7RUFDSSxjQy9CZTtFRGdDZjtBRHVCSjs7QUNwQkE7RUFDSTtBRHVCSjs7QUNyQkE7RUFDRTtFQUNBO0FEd0JGOztBQ3JCQTtFQUNJO0VBQ0E7RUFDQSxjQzlDZTtFRCtDZjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQSxxQkMzRE07RUQ0RE47QUR3Qko7O0FDckJBO0VBQ0k7RUFDQTtFQUNBLGNDNURlO0VENkRmO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHFCQ3pFTTtFRDBFTjtBRHdCSjs7QUdwR0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQVFBO0FIZ0dKOztBRzdGQTs7RUFFSTtFQUNBO0VBQ0E7QUhnR0o7O0FHN0ZBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QUhnR0o7O0FHNUZBO0VBQ0k7RUFDQTtFQUNBO0VBWUE7QUhvRko7O0FHakZBO0VBQ0k7RUFjQTtBSHVFSjs7QUl2SkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBSjBKSjtBSXhKSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBSjBKUjtBSXhKUTtFQUNJO0VBQ0E7RUFDQTtBSjBKWjtBSXZKUTtFQUNJO0VBQ0E7QUp5Slo7QUl0SlE7RUFDSTtFQUNBO0VBQ0E7QUp3Slo7O0FLOUxBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUxpTUo7QUsvTEk7RUFDSTtBTGlNUjtBSzlMSTtFQUNJO0VBQ0E7RUFDQTtFQUNBLGNIUlk7QUZ3TXBCO0FLN0xJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsdUJIMUJPO0VHMkJQLGNIbkJZO0FGa05wQjtBSzdMUTtFQUNBO0VBQ0EscUJIekJJO0VHMEJKO0FMK0xSOztBSzFMQTtFQUNJO0FMNkxKOztBSzFMQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsY0h6Q2dCO0VHMENoQix1QkhsRFc7RUdtRFg7RUFDQTtBTDZMSjtBSzNMSTtFQUNJLHFCSGxESztBRitPYjs7QUt2TEE7RUFDSTtBTDBMSjs7QUt2TEE7RUFDSTtFQUNBO0VBQ0E7RUFDQSx5Qkg5RGU7RUcrRGY7RUFDQTtFQUNBO0FMMExKOztBS3ZMQTtFQUNJLHlCSHZFUztFR3dFVDtBTDBMSjs7QUtyTEE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBTHdMSjtBS3RMSTtFQUNJO0FMd0xSO0FLckxJO0VBQ0k7RUFDQSxjSHRGWTtFR3VGWjtFQUNBO0FMdUxSO0FLckxRO0VBQ0ksY0g3RkE7QUZvUlo7O0FLaExBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FMbUxKOztBS2hMQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FMbUxKOztBS2hMQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQSxlSDlIZ0I7RUcrSGhCO0VBQ0E7QUxtTEo7O0FLaExBO0VBQ0k7RUFDQTtBTG1MSjs7QUtoTEE7RUFDSTtFQUNBO0FMbUxKOztBS2hMQTtFQUNJO0FMbUxKOztBS2hMQTtFQUNJO0FMbUxKOztBS2hMQTtFQUNJO0FMbUxKOztBS2hMQTtFQUNJO0VBQ0E7QUxtTEo7O0FLaExBO0VBQ0k7RUFDQTtFQUNBO0FMbUxKOztBS2hMQTtFQUNJO0VBQ0Esb0JIdEtnQjtBRnlWcEI7O0FNcFdBO0VBQ0U7SUFDRTtFTnVXRjtFTXBXQTtJQUNFO0VOc1dGO0VNbldBO0lBQ0U7RU5xV0Y7QUFDRjtBTzlXQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FQZ1hKO0FPOVdJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QVBnWFI7QU85V1E7RUFDSTtFQUNBO0VBQ0E7QVBnWFo7QU85V1k7RUFDSTtFQUNBO0VBQ0E7QVBnWGhCO0FPOVdZO0VBQ0k7RUFDQTtBUGdYaEI7QU81V1E7RUFDSSxjTDdCQztFSzhCRDtBUDhXWjtBTzFXSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FQNFdSO0FPMVdRO0VBQ0ksY0x6Q0M7RUswQ0Q7RUFDQTtFQUNBO0VBQ0E7QVA0V1o7QU96V1E7RUFDSTtBUDJXWjtBT3hXUTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBUDBXWjtBT3ZXUTtFQUNJO0FQeVdaOztBT2xXQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FQcVdKO0FPcFdJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBUHNXUjtBT25XSTtFQUNJO0FQcVdSO0FPbldJO0VBQ0k7QVBxV1I7QU9uV0k7RUFDSTtBUHFXUjs7QVFwY0E7RUFDSTtFQUNBLGNOSVM7RU1IVCw0Qk5DVTtFTUFWO0VBQ0E7RUFDQTtFQUNBO0FSdWNKOztBUzdjRztFQUNDO0FUZ2RKOztBUzVjQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FUK2NKO0FTN2NJO0VBQ0k7RUFDQSxjUE5XO0VPT1g7QVQrY1I7QVM3Y1E7RUFDSSxjUFpDO0VPYUQsc0JQbkJDO0FGa2ViOztBVW5lSTtFQUNJO0VBQ0E7RUFDQTtBVnNlUjs7QVd2ZUE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQSxjVENnQjtFU0FoQix1QlRSVztBRmtmZjtBV3hlSTtFQUNJLHFCVFZFO0VTV0YsY1RKWTtFU0taO0VBQ0E7RUFDQTtBWDBlUjtBV3ZlSTtFQUNJO0VBQ0E7RUFDQSxjVGJZO0FGc2ZwQjtBV3RlSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVh3ZVI7QVdyZUk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYdWVSO0FXcGVJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVhzZVI7QVdwZVE7RUFDQTtBWHNlUjtBV25lUTtFQUNBO0VBQ0E7RUFDQSxjVGhEWTtFU2lEWjtBWHFlUjtBV2hlUTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYa2VSO0FXL2RRO0VBQ0E7QVhpZVI7QVc3ZEk7RUFDSSxjVHhFSTtBRnVpQlo7QVc3ZFE7RUFDQTtBWCtkUjs7QVd6ZEE7RUFDSTtFQUNBO0FYNGRKOztBV3hkQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FYMmRKOztBV3hkQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYMmRKOztBV3hkQTtFQUNJO0FYMmRKOztBV3hkQTs7RUFFSTtFQUNBO0FYMmRKOztBV3hkQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FYMmRKOztBV3hkQTtFQUNJO0VBQ0E7QVgyZEo7O0FXeGRBO0VBQ0k7QVgyZEo7O0FXeGRBO0VBQ0k7QVgyZEo7O0FXeGRBO0VBQ0k7RUFDQTtFQUNBO0FYMmRKOztBV3hkQTtFQUNJO0FYMmRKOztBWWpuQkE7RUFHSTtJQUNJO0lBQ0E7RVprbkJOO0VZam5CTTtJQUNJO0VabW5CVjtFWS9tQkU7SUFDSTtJQUNBO0VaaW5CTjtFWS9tQkU7SUFDSTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7RVppbkJOO0VZOW1CRTtJQUNJO0lBQ0E7RVpnbkJOO0VZN21CRTtJQUNJO0VaK21CTjtBQUNGO0FZNW1CQTtFQUtRO0lBQ0k7RVowbUJWO0FBQ0YsQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvYmFzZS9fZm9udC1mYWNlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9hcHAuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL2Jhc2UvX2Jhc2Uuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL2Fic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19idXR0b24uc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2NhcmQuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2Zvcm11bGFpcmVzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19hbmltYXRpb25zLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9sYXlvdXRzL19oZWFkZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL2xheW91dHMvX2Zvb3Rlci5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvcGFnZXMvX2hvbWVwYWdlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9wYWdlcy9fZ2FsZXJpZS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvcGFnZXMvX2NoYWlzZS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvYmFzZS9fcmVzcG9uc2l2ZS5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdCYXJvcXVlJyA7XHJcbiAgICBzcmM6IHVybCguLi8uLi9mb250cy9CYXJvcXVlU2NyaXB0LnR0Zik7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdTcGVjdHJhbCc7XHJcbiAgICBzcmM6IHVybCguLi8uLi9mb250cy9TcGVjdHJhbC9TcGVjdHJhbC1SZWd1bGFyLnR0Zik7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnU3BlY3RyYWxCb2xkJztcclxuICAgIHNyYzogdXJsKC4uLy4uL2ZvbnRzL1NwZWN0cmFsL1NwZWN0cmFsLUJvbGQudHRmKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdTcGVjdHJhbExpZ2h0JztcclxuICAgIHNyYzogdXJsKC4uLy4uL2ZvbnRzL1NwZWN0cmFsL1NwZWN0cmFsLUV4dHJhTGlnaHRJdGFsaWMudHRmKTtcclxuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnQ2luemVsJztcclxuICAgIHNyYzogdXJsKC4uLy4uL2ZvbnRzL0NpbnplbC9DaW56ZWxEZWNvcmF0aXZlLVJlZ3VsYXIudHRmKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn0iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiQmFyb3F1ZVwiO1xuICBzcmM6IHVybCguLi8uLi9mb250cy9CYXJvcXVlU2NyaXB0LnR0Zik7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiU3BlY3RyYWxcIjtcbiAgc3JjOiB1cmwoLi4vLi4vZm9udHMvU3BlY3RyYWwvU3BlY3RyYWwtUmVndWxhci50dGYpO1xuICBmb250LXdlaWdodDogNDAwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlNwZWN0cmFsQm9sZFwiO1xuICBzcmM6IHVybCguLi8uLi9mb250cy9TcGVjdHJhbC9TcGVjdHJhbC1Cb2xkLnR0Zik7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiU3BlY3RyYWxMaWdodFwiO1xuICBzcmM6IHVybCguLi8uLi9mb250cy9TcGVjdHJhbC9TcGVjdHJhbC1FeHRyYUxpZ2h0SXRhbGljLnR0Zik7XG4gIGZvbnQtd2VpZ2h0OiAxMDA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiQ2luemVsXCI7XG4gIHNyYzogdXJsKC4uLy4uL2ZvbnRzL0NpbnplbC9DaW56ZWxEZWNvcmF0aXZlLVJlZ3VsYXIudHRmKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIlNwZWN0cmFsXCI7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi9pbWcvb3JpZ2luYWwtYmxhY2stbGVhdGhlci10ZXh0dXJlLWJhY2tncm91bmQuanBnKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyLCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5tYWluIHtcbiAgcGFkZGluZzogOHJlbTtcbn1cblxuaDEge1xuICBmb250LWZhbWlseTogXCJCYXJvcXVlXCI7XG4gIGNvbG9yOiAjQzlBNzRFO1xuICBmb250LXNpemU6IDIuN3JlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgZm9udC1mYW1pbHk6IFwiQ2luemVsXCI7XG4gIGNvbG9yOiAjRTVEOEM1O1xuICBtYXJnaW4tdG9wOiAtMXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiA0cmVtO1xufVxuXG5oMyB7XG4gIGNvbG9yOiAjRTVEOEM1O1xuICBmb250LXNpemU6IDEuNXJlbTtcbn1cblxucCB7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xufVxuXG4ubG9nby1saW5rIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDBweDtcbn1cblxuLmZsYXNoLXN1Y2Nlc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwMiwgOTYsIDQ2LCAwLjIpO1xuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNDOUE3NEU7XG4gIGNvbG9yOiAjRTVEOEM1O1xuICBwYWRkaW5nOiAxcmVtIDEuNXJlbTtcbiAgbWFyZ2luOiAxcmVtIGF1dG87XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIGZvbnQtZmFtaWx5OiBcIkNpbnplbFwiO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mbGFzaC1lcnJvciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAyLCA5NiwgNDYsIDAuMik7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI0M5QTc0RTtcbiAgY29sb3I6ICNFNUQ4QzU7XG4gIHBhZGRpbmc6IDFyZW0gMS41cmVtO1xuICBtYXJnaW46IDFyZW0gYXV0bztcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgYm94LXNoYWRvdzogMCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgZm9udC1mYW1pbHk6IFwiQ2luemVsXCI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmJ0biB7XG4gIC0tYm9yZGVyLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAjN0UxRTFFLCAjQzlBNzRFICk7XG4gIC0tYm9yZGVyLXdpZHRoOiAwLjEyNWVtO1xuICAtLWN1cnZlLXNpemU6IDAuNWVtO1xuICAtLWJsdXI6IDMwcHg7XG4gIC0tYmc6ICMwODAzMTI7XG4gIC0tY29sb3I6ICNFNUQ4QzU7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcik7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLyogdXNlIHBvc2l0aW9uOiByZWxhdGl2ZTsgc28gdGhhdCBCRyBpcyBvbmx5IGZvciAuYnRuICovXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtZ3JpZDtcbiAgcGxhY2UtY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAwLjVlbSAxLjVlbTtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBib3JkZXI6IDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGJveC1zaGFkb3c6IDEwcHggMTBweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDAlIHZhcigtLWN1cnZlLXNpemUpLCB2YXIoLS1jdXJ2ZS1zaXplKSAwLCAxMDAlIDAsIDEwMCUgY2FsYygxMDAlIC0gdmFyKC0tY3VydmUtc2l6ZSkpLCBjYWxjKDEwMCUgLSB2YXIoLS1jdXJ2ZS1zaXplKSkgMTAwJSwgMCAxMDAlKTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMjUwbXM7XG59XG5cbi5idG46OmFmdGVyLFxuLmJ0bjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBpbnNldDogMDtcbn1cblxuLmJ0bjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYm9yZGVyLWNvbG9yKTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMDAlIDMwMCU7XG4gIGFuaW1hdGlvbjogbW92ZS1iZzcyMzQgNXMgZWFzZSBpbmZpbml0ZTtcbiAgei1pbmRleDogLTI7XG59XG5cbi5idG46OmFmdGVyIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYmcpO1xuICB6LWluZGV4OiAtMTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKHZhcigtLWJvcmRlci13aWR0aCkgY2FsYyh2YXIoLS1jdXJ2ZS1zaXplKSArIHZhcigtLWJvcmRlci13aWR0aCkgKiAwLjUpLCBjYWxjKHZhcigtLWN1cnZlLXNpemUpICsgdmFyKC0tYm9yZGVyLXdpZHRoKSAqIDAuNSkgdmFyKC0tYm9yZGVyLXdpZHRoKSwgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSkgdmFyKC0tYm9yZGVyLXdpZHRoKSwgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSkgY2FsYygxMDAlIC0gKHZhcigtLWN1cnZlLXNpemUpICsgdmFyKC0tYm9yZGVyLXdpZHRoKSAqIDAuNSkpLCBjYWxjKDEwMCUgLSAodmFyKC0tY3VydmUtc2l6ZSkgKyB2YXIoLS1ib3JkZXItd2lkdGgpICogMC41KSkgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSksIHZhcigtLWJvcmRlci13aWR0aCkgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSkpO1xuICB0cmFuc2l0aW9uOiBjbGlwLXBhdGggNTAwbXM7XG59XG5cbi5idG46d2hlcmUoOmhvdmVyLCA6Zm9jdXMpOjphZnRlciB7XG4gIGNsaXAtcGF0aDogcG9seWdvbihjYWxjKDEwMCUgLSB2YXIoLS1ib3JkZXItd2lkdGgpKSBjYWxjKDEwMCUgLSAodmFyKC0tY3VydmUtc2l6ZSkgKyB2YXIoLS1ib3JkZXItd2lkdGgpICogMC41KSksIGNhbGMoMTAwJSAtIHZhcigtLWJvcmRlci13aWR0aCkpIHZhcigtLWJvcmRlci13aWR0aCksIGNhbGMoMTAwJSAtIHZhcigtLWJvcmRlci13aWR0aCkpIHZhcigtLWJvcmRlci13aWR0aCksIGNhbGMoMTAwJSAtIHZhcigtLWJvcmRlci13aWR0aCkpIGNhbGMoMTAwJSAtICh2YXIoLS1jdXJ2ZS1zaXplKSArIHZhcigtLWJvcmRlci13aWR0aCkgKiAwLjUpKSwgY2FsYygxMDAlIC0gKHZhcigtLWN1cnZlLXNpemUpICsgdmFyKC0tYm9yZGVyLXdpZHRoKSAqIDAuNSkpIGNhbGMoMTAwJSAtIHZhcigtLWJvcmRlci13aWR0aCkpLCBjYWxjKDEwMCUgLSAodmFyKC0tY3VydmUtc2l6ZSkgKyB2YXIoLS1ib3JkZXItd2lkdGgpICogMC41KSkgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSkpO1xuICB0cmFuc2l0aW9uOiAyMDBtcztcbn1cblxuLmNoYWlzZXMtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAycmVtO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vaW1nL2Nsb3NlLXVwLWZhYnJpYy10ZXh0dXJlLWRldGFpbC5qcGcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIsIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgcGFkZGluZzogNXJlbTtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbn1cbi5jaGFpc2VzLWNvbnRhaW5lciAuY2hhaXNlLWNhcmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZ2FwOiAycmVtO1xuICB3aWR0aDogMjIlO1xuICBwYWRkaW5nOiAycmVtO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjQzlBNzRFLCAjRTVEOEM1KTtcbiAgYm94LXNoYWRvdzogMCA0cHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlLCBmaWx0ZXIgMC4zcyBlYXNlO1xufVxuLmNoYWlzZXMtY29udGFpbmVyIC5jaGFpc2UtY2FyZCBoMyB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGNvbG9yOiAjMzgzMDJFO1xufVxuLmNoYWlzZXMtY29udGFpbmVyIC5jaGFpc2UtY2FyZCAuY2hhaXNlLWltYWdlIHtcbiAgd2lkdGg6IDYwJTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuLmNoYWlzZXMtY29udGFpbmVyIC5jaGFpc2UtY2FyZDpob3ZlciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTBweCkgc2NhbGUoMS4wMik7XG4gIGJveC1zaGFkb3c6IDAgMTJweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMDUpO1xufVxuXG5mb3JtIHtcbiAgZm9udC1mYW1pbHk6IFwiU3BlY3RyYWxcIjtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICNDOUE3NEUgNSUsICNFNUQ4QzUgOTUlKTtcbiAgcGFkZGluZzogM3JlbTtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgYm94LXNoYWRvdzogMCAxMHB4IDI1cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuZm9ybSAuZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5mb3JtIC5mb3JtLWxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gIGNvbG9yOiAjMzgzMDJFO1xufVxuZm9ybSAuZm9ybS1pbnB1dCwgZm9ybSB0ZXh0YXJlYSwgZm9ybSBzZWxlY3Qge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMC43NXJlbTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMzgzMDJFO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IFwiU3BlY3RyYWxcIjtcbiAgY29sb3I6ICMzODMwMkU7XG59XG5mb3JtIC5mb3JtLWlucHV0OmZvY3VzLCBmb3JtIHRleHRhcmVhOmZvY3VzLCBmb3JtIHNlbGVjdDpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJvcmRlci1jb2xvcjogIzdFMUUxRTtcbiAgYm94LXNoYWRvdzogMCAwIDVweCAjN0UxRTFFO1xufVxuXG4uZm9ybS1kZWxldGUge1xuICBhbGw6IHVuc2V0O1xufVxuXG5pbnB1dFt0eXBlPWZpbGVdIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IDAuNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgcGFkZGluZzogMC41cmVtO1xuICBib3JkZXI6IDJweCBkYXNoZWQgIzM4MzAyRTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIGNvbG9yOiAjMzgzMDJFO1xuICBmb250LWZhbWlseTogXCJTcGVjdHJhbFwiO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2U7XG59XG5pbnB1dFt0eXBlPWZpbGVdOmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjQzlBNzRFO1xufVxuXG4uY2hlY2tib3gtZ3JvdXAgaW5wdXRbdHlwZT1jaGVja2JveF0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uY2hlY2tib3gtZ3JvdXAgbGFiZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbjogNXB4O1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFNUQ4QzU7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG59XG5cbi5jaGVja2JveC1ncm91cCBpbnB1dFt0eXBlPWNoZWNrYm94XTpjaGVja2VkICsgbGFiZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzlBNzRFO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5sb2dpbi1hY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59XG4ubG9naW4tYWN0aW9uIC5idG4ge1xuICBtYXJnaW4tcmlnaHQ6IDFyZW07XG59XG4ubG9naW4tYWN0aW9uIC5tZHAge1xuICBmb250LXNpemU6IDAuOXJlbTtcbiAgY29sb3I6ICMzODMwMkU7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzO1xufVxuLmxvZ2luLWFjdGlvbiAubWRwOmhvdmVyIHtcbiAgY29sb3I6ICM3RTFFMUU7XG59XG5cbi5jaGVjayB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMThweDtcbiAgaGVpZ2h0OiAxOHB4O1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xufVxuXG4uY2hlY2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0xNXB4O1xuICBsZWZ0OiAtMTVweDtcbiAgd2lkdGg6IDQ4cHg7XG4gIGhlaWdodDogNDhweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDM0LCA1MCwgODQsIDAuMDMpO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZTtcbn1cblxuLmNoZWNrIHN2ZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbiAgZmlsbDogbm9uZTtcbiAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xuICBzdHJva2U6ICMzODMwMkU7XG4gIHN0cm9rZS13aWR0aDogMS41O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuXG4uY2hlY2sgc3ZnIHBhdGgge1xuICBzdHJva2UtZGFzaGFycmF5OiA2MDtcbiAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDA7XG59XG5cbi5jaGVjayBzdmcgcG9seWxpbmUge1xuICBzdHJva2UtZGFzaGFycmF5OiAyMjtcbiAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDY2O1xufVxuXG4uY2hlY2s6aG92ZXI6YmVmb3JlIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmNoZWNrOmhvdmVyIHN2ZyB7XG4gIHN0cm9rZTogdmFyKC0tYWNjZW50LWNvbG9yLCAjN0UxRTFFKTtcbn1cblxuI2NieDI6Y2hlY2tlZCArIC5jaGVjayBzdmcge1xuICBzdHJva2U6IHZhcigtLWFjY2VudC1jb2xvciwgIzdFMUUxRSk7XG59XG5cbiNjYngyOmNoZWNrZWQgKyAuY2hlY2sgc3ZnIHBhdGgge1xuICBzdHJva2UtZGFzaG9mZnNldDogNjA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcbn1cblxuI2NieDI6Y2hlY2tlZCArIC5jaGVjayBzdmcgcG9seWxpbmUge1xuICBzdHJva2UtZGFzaG9mZnNldDogNDI7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbi1kZWxheTogMC4xNXM7XG59XG5cbi5yZW1lbWJlci10ZXh0IHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LWZhbWlseTogIzM4MzAyRTtcbn1cblxuQGtleWZyYW1lcyBtb3ZlLWJnNzIzNCB7XG4gIDAlIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzMSUgMCU7XG4gIH1cbiAgNTAlIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA3MCUgMTAwJTtcbiAgfVxuICAxMDAlIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzMSUgMCU7XG4gIH1cbn1cbm5hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDhweCk7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjMzgzMDJFO1xuICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gIHotaW5kZXg6IDEwO1xufVxubmF2IC5sZWZ0LXNpZGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDFyZW07XG4gIG1hcmdpbi1sZWZ0OiA2cmVtO1xufVxubmF2IC5sZWZ0LXNpZGUgLmxvZ28tbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNjBweDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuOXMgZWFzZTtcbn1cbm5hdiAubGVmdC1zaWRlIC5sb2dvLWxpbmsgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuOXMgZWFzZTtcbn1cbm5hdiAubGVmdC1zaWRlIC5sb2dvLWxpbms6aG92ZXIgaW1nIHtcbiAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZykgc2NhbGUoMS4xKTtcbiAgZmlsdGVyOiBkcm9wLXNoYWRvdygwIDAgOHB4ICNDOUE3NEUpO1xufVxubmF2IC5sZWZ0LXNpZGUgLmhlbGxvIHtcbiAgY29sb3I6ICNDOUE3NEU7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xufVxubmF2IC5tYWluLW5hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1yaWdodDogNnJlbTtcbiAgZ2FwOiAycmVtO1xufVxubmF2IC5tYWluLW5hdiBhIHtcbiAgY29sb3I6ICNDOUE3NEU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbm5hdiAubWFpbi1uYXYgYTo6YmVmb3JlIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG59XG5uYXYgLm1haW4tbmF2IGE6OmFmdGVyLCBuYXYgLm1haW4tbmF2IGE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHdpZHRoOiAwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI0M5QTc0RSwgIzdFMUUxRSk7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0cmFuc2l0aW9uOiAwLjVzO1xufVxubmF2IC5tYWluLW5hdiBhOmhvdmVyOjphZnRlciwgbmF2IC5tYWluLW5hdiBhOmhvdmVyOjpiZWZvcmUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmJ1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZ2FwOiAwLjRyZW07XG59XG4uYnVyZ2VyIHNwYW4ge1xuICB3aWR0aDogMjVweDtcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uYnVyZ2VyLm9wZW4gc3BhbjpudGgtY2hpbGQoMSkge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDVweCwgNXB4KTtcbn1cbi5idXJnZXIub3BlbiBzcGFuOm50aC1jaGlsZCgyKSB7XG4gIG9wYWNpdHk6IDA7XG59XG4uYnVyZ2VyLm9wZW4gc3BhbjpudGgtY2hpbGQoMykge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSg1cHgsIC01cHgpO1xufVxuXG5mb290ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjQzlBNzRFO1xuICBmb250LWZhbWlseTogXCJTcGVjdHJhbExpZ2h0XCI7XG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpO1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBib3JkZXItdG9wOiAzcHggc29saWQgIzM4MzAyRTtcbiAgcGFkZGluZzogMXJlbSAycmVtO1xufVxuXG5oZWFkZXIgaDIge1xuICBmb250LXNpemU6IDFyZW07XG59XG5cbi5kZXNjcmlwdGlvbl9fd3JhcHBlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDRyZW07XG59XG4uZGVzY3JpcHRpb25fX3dyYXBwZXIgcCB7XG4gIHdpZHRoOiA1MCU7XG4gIGNvbG9yOiAjRTVEOEM1O1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uZGVzY3JpcHRpb25fX3dyYXBwZXIgcCAudGl0bGUtc3BhbiB7XG4gIGNvbG9yOiAjQzlBNzRFO1xuICBmb250LWZhbWlseTogXCJCYXJvcXVlXCI7XG59XG5cbi5nYWxlcmllX193cmFwcGVyIC5jYXJkLWFjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDAuNXJlbTtcbn1cblxuLmNoYWlzZV9fd3JhcHBlciB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICNDOUE3NEUgNSUsICNFNUQ4QzUgODAlKTtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgcGFkZGluZzogNHJlbTtcbiAgbWFyZ2luOiA0cmVtIGF1dG87XG4gIG1heC13aWR0aDogMTAwMHB4O1xuICBib3gtc2hhZG93OiAwIDEwcHggMjBweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIGNvbG9yOiAjMzgzMDJFO1xuICBmb250LWZhbWlseTogXCJTcGVjdHJhbFwiO1xufVxuLmNoYWlzZV9fd3JhcHBlciBoMyB7XG4gIGZvbnQtZmFtaWx5OiBcIkNpbnplbFwiO1xuICBjb2xvcjogIzM4MzAyRTtcbiAgZm9udC1zaXplOiAycmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLmNoYWlzZV9fd3JhcHBlciBwIHtcbiAgZm9udC1zaXplOiAxLjFyZW07XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIGNvbG9yOiAjMzgzMDJFO1xufVxuLmNoYWlzZV9fd3JhcHBlciBpbWcge1xuICBtYXgtd2lkdGg6IDMwMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgbWFyZ2luOiAycmVtIGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmNoYWlzZV9fd3JhcHBlciAuY2FyZC1hY3Rpb25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luOiAycmVtO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5jaGFpc2VfX3dyYXBwZXIgLmNvbW1lbnRhaXJlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNHB4KTtcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjQzlBNzRFO1xuICBwYWRkaW5nOiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4uY2hhaXNlX193cmFwcGVyIC5jb21tZW50YWlyZSBwIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuLmNoYWlzZV9fd3JhcHBlciAuY29tbWVudGFpcmUgc21hbGwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGNvbG9yOiAjMzgzMDJFO1xuICBmb250LXNpemU6IDAuOXJlbTtcbn1cbi5jaGFpc2VfX3dyYXBwZXIgZm9ybSB0ZXh0YXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDBweDtcbiAgcGFkZGluZzogMXJlbTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMzgzMDJFO1xuICByZXNpemU6IHZlcnRpY2FsO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExMCwgODksIDg5LCAwLjI3NCk7XG59XG4uY2hhaXNlX193cmFwcGVyIGZvcm0gLmJ0biB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59XG4uY2hhaXNlX193cmFwcGVyIC5jb25uZXhpb24ge1xuICBjb2xvcjogIzdFMUUxRTtcbn1cbi5jaGFpc2VfX3dyYXBwZXIgLmNvbm5leGlvbjpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4uY2hhaXNlX193cmFwcGVyICNub3RlLWZvcm0ge1xuICBhbGw6IHVuc2V0O1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnJhdGluZy1zdGFycyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMC4zcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG59XG5cbi5zdGFyLWJ0biB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgZm9udC1zaXplOiAxLjhyZW07XG4gIGNvbG9yOiAjY2NjO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5zdGFyLWJ0bi5hY3RpdmUge1xuICBjb2xvcjogI2Y1YzUxODtcbn1cblxuLnN0YXItYnRuOmhvdmVyLFxuLnN0YXItYnRuOmZvY3VzIHtcbiAgY29sb3I6ICNmNWM1MTg7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5zdGFycyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMC4zcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG59XG5cbi5zdGFycyAuc3RhciB7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBjb2xvcjogI2NjYztcbn1cblxuLnN0YXJzIC5zdGFyLmFjdGl2ZSB7XG4gIGNvbG9yOiAjZjVjNTE4O1xufVxuXG4uc3RhcnMgLnN0YXIuaGFsZiB7XG4gIGNvbG9yOiAjZjVlMjkxO1xufVxuXG4uc3RhcnMgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY29sb3I6ICM2NjY7XG4gIG1hcmdpbi1sZWZ0OiAwLjRyZW07XG59XG5cbi5zdGFyLWJ0bi5ob3ZlciB7XG4gIGNvbG9yOiAjZjVjNTE4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDAwcHgpIHtcbiAgLmNoYWlzZXMtY29udGFpbmVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBhZGRpbmc6IDJyZW07XG4gIH1cbiAgLmNoYWlzZXMtY29udGFpbmVyIC5jaGFpc2UtY2FyZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgbWFpbiB7XG4gICAgcGFkZGluZzogMnJlbTtcbiAgICBwYWRkaW5nLXRvcDogOHJlbTtcbiAgfVxuICBuYXYgLm1haW4tbmF2IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDEwMCU7XG4gICAgcmlnaHQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDFyZW07XG4gIH1cbiAgLm1haW4tbmF2LmFjdGl2ZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbiAgLmJ1cmdlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmRlc2NyaXB0aW9uX193cmFwcGVyIHAge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59IiwiQHVzZSBcIi4uL2Fic3RyYWN0cy92YXJpYWJsZXNcIiBhcyB2O1xyXG5cclxuKiB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtcHJpbWFyeTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi9pbWcvb3JpZ2luYWwtYmxhY2stbGVhdGhlci10ZXh0dXJlLWJhY2tncm91bmQuanBnKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciwgY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbm1haW4ge1xyXG4gICAgcGFkZGluZzogOHJlbTtcclxufVxyXG5cclxuaDEge1xyXG4gICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtdGl0bGU7XHJcbiAgICBjb2xvcjogdi4kY29sb3ItZ29sZDtcclxuICAgIGZvbnQtc2l6ZTogMi43cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5oMiB7XHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBmb250LWZhbWlseTogdi4kZm9udC1oMztcclxuICAgIGNvbG9yOiB2LiRjb2xvci10ZXh0LWNsYWlyO1xyXG4gICAgbWFyZ2luLXRvcDogLTFyZW07XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xyXG59XHJcblxyXG5oMyB7XHJcbiAgICBjb2xvcjogdi4kY29sb3ItdGV4dC1jbGFpcjtcclxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG59XHJcblxyXG5wIHtcclxuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xyXG59XHJcbi5sb2dvLWxpbmsge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAxMDBweDtcclxufVxyXG5cclxuLmZsYXNoLXN1Y2Nlc3Mge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDIsIDk2LCA0NiwgMC4yKTtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI0M5QTc0RTtcclxuICAgIGNvbG9yOiB2LiRjb2xvci10ZXh0LWNsYWlyO1xyXG4gICAgcGFkZGluZzogMXJlbSAxLjVyZW07XHJcbiAgICBtYXJnaW46IDFyZW0gYXV0bztcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgICBmb250LWZhbWlseTogdi4kZm9udC1oMztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmZsYXNoLWVycm9yIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAyLCA5NiwgNDYsIDAuMik7XHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNDOUE3NEU7XHJcbiAgICBjb2xvcjogdi4kY29sb3ItdGV4dC1jbGFpcjtcclxuICAgIHBhZGRpbmc6IDFyZW0gMS41cmVtO1xyXG4gICAgbWFyZ2luOiAxcmVtIGF1dG87XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtaDM7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbiIsIkB1c2UgXCIuLi9iYXNlL2ZvbnQtZmFjZVwiO1xyXG5cclxuJGZvbnQtdGl0bGU6ICdCYXJvcXVlJztcclxuJGZvbnQtcHJpbWFyeTogJ1NwZWN0cmFsJztcclxuJGZvbnQtaDM6ICdDaW56ZWwnO1xyXG4kZm9udC1ib2xkOiAnU3BlY3RyYWxCb2xkJztcclxuJGZvbnQtZm9vdGVyOiAnU3BlY3RyYWxMaWdodCc7XHJcblxyXG4kY29sb3ItZ29sZDogI0M5QTc0RTtcclxuJGNvbG9yLXJlZDogIzdFMUUxRTtcclxuJGNvbG9yLXRleHQtY2xhaXI6ICNFNUQ4QzU7XHJcbiRjb2xvci10ZXh0LWZvbmNlczogIzM4MzAyRTtcclxuIiwiQHVzZSAnLi4vYWJzdHJhY3RzL3ZhcmlhYmxlcycgYXMgdjtcclxuXHJcbi5idG4ge1xyXG4gICAgLS1ib3JkZXItY29sb3I6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsICM3RTFFMUUsICNDOUE3NEUgKTtcclxuICAgIC0tYm9yZGVyLXdpZHRoOiAwLjEyNWVtO1xyXG4gICAgLS1jdXJ2ZS1zaXplOiAwLjVlbTtcclxuICAgIC0tYmx1cjogMzBweDtcclxuICAgIC0tYmc6ICMwODAzMTI7XHJcbiAgICAtLWNvbG9yOiAjRTVEOEM1O1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yKTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIC8qIHVzZSBwb3NpdGlvbjogcmVsYXRpdmU7IHNvIHRoYXQgQkcgaXMgb25seSBmb3IgLmJ0biAqL1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaXNvbGF0aW9uOiBpc29sYXRlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWdyaWQ7XHJcbiAgICBwbGFjZS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwLjVlbSAxLjVlbTtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMjBweCByZ2JhKDAsIDAsIDAsIDAuNik7XHJcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oXHJcbiAgICAgICAgLyogVG9wLWxlZnQgKi8gMCUgdmFyKC0tY3VydmUtc2l6ZSksXHJcbiAgICAgICAgdmFyKC0tY3VydmUtc2l6ZSkgMCxcclxuICAgICAgICAvKiB0b3AtcmlnaHQgKi8gMTAwJSAwLFxyXG4gICAgICAgIDEwMCUgY2FsYygxMDAlIC0gdmFyKC0tY3VydmUtc2l6ZSkpLFxyXG4gICAgICAgIC8qIGJvdHRvbS1yaWdodCAxICovIGNhbGMoMTAwJSAtIHZhcigtLWN1cnZlLXNpemUpKSAxMDAlLFxyXG4gICAgICAgIC8qIGJvdHRvbS1yaWdodCAyICovIDAgMTAwJVxyXG4gICAgKTtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIDI1MG1zO1xyXG59XHJcblxyXG4uYnRuOjphZnRlcixcclxuLmJ0bjo6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBpbnNldDogMDtcclxufVxyXG5cclxuLmJ0bjo6YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLWJvcmRlci1jb2xvcik7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDMwMCUgMzAwJTtcclxuICAgIGFuaW1hdGlvbjogbW92ZS1iZzcyMzQgNXMgZWFzZSBpbmZpbml0ZTtcclxuICAgIHotaW5kZXg6IC0yO1xyXG59XHJcblxyXG5cclxuLmJ0bjo6YWZ0ZXIge1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tYmcpO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oXHJcbiAgICAgICAgLyogVG9wLWxlZnQgKi8gdmFyKC0tYm9yZGVyLXdpZHRoKVxyXG4gICAgICAgIGNhbGModmFyKC0tY3VydmUtc2l6ZSkgKyB2YXIoLS1ib3JkZXItd2lkdGgpICogMC41KSxcclxuICAgICAgICBjYWxjKHZhcigtLWN1cnZlLXNpemUpICsgdmFyKC0tYm9yZGVyLXdpZHRoKSAqIDAuNSkgdmFyKC0tYm9yZGVyLXdpZHRoKSxcclxuICAgICAgICAvKiB0b3AtcmlnaHQgKi8gY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSkgdmFyKC0tYm9yZGVyLXdpZHRoKSxcclxuICAgICAgICBjYWxjKDEwMCUgLSB2YXIoLS1ib3JkZXItd2lkdGgpKVxyXG4gICAgICAgIGNhbGMoMTAwJSAtIGNhbGModmFyKC0tY3VydmUtc2l6ZSkgKyB2YXIoLS1ib3JkZXItd2lkdGgpICogMC41KSksXHJcbiAgICAgICAgLyogYm90dG9tLXJpZ2h0IDEgKi9cclxuICAgICAgICBjYWxjKDEwMCUgLSBjYWxjKHZhcigtLWN1cnZlLXNpemUpICsgdmFyKC0tYm9yZGVyLXdpZHRoKSAqIDAuNSkpXHJcbiAgICAgICAgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSksXHJcbiAgICAgICAgLyogYm90dG9tLXJpZ2h0IDIgKi8gdmFyKC0tYm9yZGVyLXdpZHRoKSBjYWxjKDEwMCUgLSB2YXIoLS1ib3JkZXItd2lkdGgpKVxyXG4gICAgKTtcclxuICAgIHRyYW5zaXRpb246IGNsaXAtcGF0aCA1MDBtcztcclxufVxyXG5cclxuLmJ0bjp3aGVyZSg6aG92ZXIsIDpmb2N1cyk6OmFmdGVyIHtcclxuICAgIGNsaXAtcGF0aDogcG9seWdvbihcclxuICAgICAgICAvKiBUb3AtbGVmdCAqLyBjYWxjKDEwMCUgLSB2YXIoLS1ib3JkZXItd2lkdGgpKVxyXG4gICAgICAgIGNhbGMoMTAwJSAtIGNhbGModmFyKC0tY3VydmUtc2l6ZSkgKyB2YXIoLS1ib3JkZXItd2lkdGgpICogMC41KSksXHJcbiAgICAgICAgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSkgdmFyKC0tYm9yZGVyLXdpZHRoKSxcclxuICAgICAgICAvKiB0b3AtcmlnaHQgKi8gY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSkgdmFyKC0tYm9yZGVyLXdpZHRoKSxcclxuICAgICAgICBjYWxjKDEwMCUgLSB2YXIoLS1ib3JkZXItd2lkdGgpKVxyXG4gICAgICAgIGNhbGMoMTAwJSAtIGNhbGModmFyKC0tY3VydmUtc2l6ZSkgKyB2YXIoLS1ib3JkZXItd2lkdGgpICogMC41KSksXHJcbiAgICAgICAgLyogYm90dG9tLXJpZ2h0IDEgKi9cclxuICAgICAgICBjYWxjKDEwMCUgLSBjYWxjKHZhcigtLWN1cnZlLXNpemUpICsgdmFyKC0tYm9yZGVyLXdpZHRoKSAqIDAuNSkpXHJcbiAgICAgICAgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSksXHJcbiAgICAgICAgLyogYm90dG9tLXJpZ2h0IDIgKi9cclxuICAgICAgICBjYWxjKDEwMCUgLSBjYWxjKHZhcigtLWN1cnZlLXNpemUpICsgdmFyKC0tYm9yZGVyLXdpZHRoKSAqIDAuNSkpXHJcbiAgICAgICAgY2FsYygxMDAlIC0gdmFyKC0tYm9yZGVyLXdpZHRoKSlcclxuICAgICk7XHJcbiAgICB0cmFuc2l0aW9uOiAyMDBtcztcclxufSIsIi5jaGFpc2VzLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZ2FwOiAycmVtO1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vaW1nL2Nsb3NlLXVwLWZhYnJpYy10ZXh0dXJlLWRldGFpbC5qcGcpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyLCBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcclxuICAgIHBhZGRpbmc6IDVyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xyXG4gICAgXHJcbiAgICAuY2hhaXNlLWNhcmQge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgZ2FwOiAycmVtO1xyXG4gICAgICAgIHdpZHRoOiAyMiU7XHJcbiAgICAgICAgcGFkZGluZzogMnJlbTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICNDOUE3NEUsICNFNUQ4QzUpO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlLCBmaWx0ZXIgMC4zcyBlYXNlO1xyXG5cclxuICAgICAgICBoMyB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICAgICAgICAgIGNvbG9yOiAjMzgzMDJFO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmNoYWlzZS1pbWFnZSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTBweCkgc2NhbGUoMS4wMik7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMTJweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC40KTtcclxuICAgICAgICAgICAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMDUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIkB1c2UgJy4uL2Fic3RyYWN0cy92YXJpYWJsZXMnIGFzIHY7XHJcblxyXG5mb3JtIHtcclxuICAgIGZvbnQtZmFtaWx5OiB2LiRmb250LXByaW1hcnk7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCB2LiRjb2xvci1nb2xkIDUlLCB2LiRjb2xvci10ZXh0LWNsYWlyIDk1JSk7XHJcbiAgICBwYWRkaW5nOiAzcmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMTBweCAyNXB4IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuXHJcbiAgICAuZm9ybS1ncm91cCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuICAgIH1cclxuXHJcbiAgICAuZm9ybS1sYWJlbCB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xyXG4gICAgICAgIGNvbG9yOiB2LiRjb2xvci10ZXh0LWZvbmNlcztcclxuICAgIH1cclxuXHJcbiAgICAuZm9ybS1pbnB1dCx0ZXh0YXJlYSxzZWxlY3Qge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDAuNzVyZW07XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHYuJGNvbG9yLXRleHQtZm9uY2VzO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcclxuICAgICAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtcHJpbWFyeTtcclxuICAgICAgICBjb2xvcjogdi4kY29sb3ItdGV4dC1mb25jZXM7XHJcblxyXG4gICAgICAgICY6Zm9jdXMge1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB2LiRjb2xvci1yZWQ7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAwIDVweCB2LiRjb2xvci1yZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uZm9ybS1kZWxldGUge1xyXG4gICAgYWxsOiB1bnNldDtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gICAgcGFkZGluZzogMC41cmVtO1xyXG4gICAgYm9yZGVyOiAycHggZGFzaGVkIHYuJGNvbG9yLXRleHQtZm9uY2VzO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xyXG4gICAgY29sb3I6IHYuJGNvbG9yLXRleHQtZm9uY2VzO1xyXG4gICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtcHJpbWFyeTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2U7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB2LiRjb2xvci1nb2xkO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBDSEVDS0JPWCBcclxuXHJcbi5jaGVja2JveC1ncm91cCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmNoZWNrYm94LWdyb3VwIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbjogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdi4kY29sb3ItdGV4dC1jbGFpcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxufVxyXG5cclxuLmNoZWNrYm94LWdyb3VwIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkICsgbGFiZWwge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdi4kY29sb3ItZ29sZDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuXHJcbi8vTURQIE9VQkxJRVxyXG4ubG9naW4tYWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcclxuXHJcbiAgICAuYnRuIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XHJcbiAgICB9XHJcblxyXG4gICAgLm1kcCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgICAgICAgY29sb3I6IHYuJGNvbG9yLXRleHQtZm9uY2VzO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3M7XHJcblxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogdi4kY29sb3ItcmVkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8vIENIRUNLQk9YIFxyXG4uY2hlY2sge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDE4cHg7XHJcbiAgICBoZWlnaHQ6IDE4cHg7XHJcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcclxufVxyXG5cclxuLmNoZWNrOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAtMTVweDtcclxuICAgIGxlZnQ6IC0xNXB4O1xyXG4gICAgd2lkdGg6IDQ4cHg7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDM0LCA1MCwgODQsIDAuMDMpO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4ycyBlYXNlO1xyXG59XHJcblxyXG4uY2hlY2sgc3ZnIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBmaWxsOiBub25lO1xyXG4gICAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xyXG4gICAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDtcclxuICAgIHN0cm9rZTogdi4kY29sb3ItdGV4dC1mb25jZXM7XHJcbiAgICBzdHJva2Utd2lkdGg6IDEuNTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XHJcbn1cclxuXHJcbi5jaGVjayBzdmcgcGF0aCB7XHJcbiAgICBzdHJva2UtZGFzaGFycmF5OiA2MDtcclxuICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAwO1xyXG59XHJcblxyXG4uY2hlY2sgc3ZnIHBvbHlsaW5lIHtcclxuICAgIHN0cm9rZS1kYXNoYXJyYXk6IDIyO1xyXG4gICAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDY2O1xyXG59XHJcblxyXG4uY2hlY2s6aG92ZXI6YmVmb3JlIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbi5jaGVjazpob3ZlciBzdmcge1xyXG4gICAgc3Ryb2tlOiB2YXIoLS1hY2NlbnQtY29sb3IsIHYuJGNvbG9yLXJlZCk7XHJcbn1cclxuXHJcbiNjYngyOmNoZWNrZWQgKyAuY2hlY2sgc3ZnIHtcclxuICAgIHN0cm9rZTogdmFyKC0tYWNjZW50LWNvbG9yLCB2LiRjb2xvci1yZWQpO1xyXG59XHJcblxyXG4jY2J4MjpjaGVja2VkICsgLmNoZWNrIHN2ZyBwYXRoIHtcclxuICAgIHN0cm9rZS1kYXNob2Zmc2V0OiA2MDtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcclxufVxyXG5cclxuI2NieDI6Y2hlY2tlZCArIC5jaGVjayBzdmcgcG9seWxpbmUge1xyXG4gICAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDQyO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMC4xNXM7XHJcbn1cclxuXHJcbi5yZW1lbWJlci10ZXh0IHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiB2LiRjb2xvci10ZXh0LWZvbmNlcztcclxufSIsIkBrZXlmcmFtZXMgbW92ZS1iZzcyMzQge1xyXG4gIDAlIHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDMxJSAwJTtcclxuICB9XHJcblxyXG4gIDUwJSB7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA3MCUgMTAwJTtcclxuICB9XHJcblxyXG4gIDEwMCUge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMzElIDAlO1xyXG4gIH1cclxufSIsIkB1c2UgJy4uL2Fic3RyYWN0cy92YXJpYWJsZXMnIGFzIHY7XHJcblxyXG5uYXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpO1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB2LiRjb2xvci10ZXh0LWZvbmNlcztcclxuICAgIHBhZGRpbmc6IDFyZW0gMnJlbTtcclxuICAgIHotaW5kZXg6IDEwO1xyXG5cclxuICAgIC5sZWZ0LXNpZGUge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBnYXA6IDFyZW07XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDZyZW07XHJcblxyXG4gICAgICAgIC5sb2dvLWxpbmsge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgd2lkdGg6IDYwcHg7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjlzIGVhc2U7XHJcblxyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC45cyBlYXNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6aG92ZXIgaW1nIHtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgxODBkZWcpIHNjYWxlKDEuMSk7XHJcbiAgICAgICAgICAgICAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCA4cHggdi4kY29sb3ItZ29sZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5oZWxsbyB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2LiRjb2xvci1nb2xkO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm1haW4tbmF2IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA2cmVtO1xyXG4gICAgICAgIGdhcDogMnJlbTtcclxuXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2LiRjb2xvci1nb2xkO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGE6OmFmdGVyLCBhOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgd2lkdGg6IDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2LiRjb2xvci1nb2xkLCB2LiRjb2xvci1yZWQpO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogMC41cztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGE6aG92ZXI6OmFmdGVyLCBhOmhvdmVyOjpiZWZvcmUge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vTUVOVSBCVVJHRVJcclxuXHJcbi5idXJnZXIge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBnYXA6IDAuNHJlbTtcclxuICAgIHNwYW4ge1xyXG4gICAgICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgICAgIGhlaWdodDogM3B4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xyXG4gICAgfVxyXG5cclxuICAgICYub3BlbiBzcGFuOm50aC1jaGlsZCgxKSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSg1cHgsIDVweCk7XHJcbiAgICB9XHJcbiAgICAmLm9wZW4gc3BhbjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcbiAgICAmLm9wZW4gc3BhbjpudGgtY2hpbGQoMykge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKDVweCwgLTVweCk7XHJcbiAgICB9XHJcbn0iLCJAdXNlICcuLi9hYnN0cmFjdHMvdmFyaWFibGVzJyBhcyB2O1xyXG5cclxuZm9vdGVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiB2LiRjb2xvci1nb2xkO1xyXG4gICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtZm9vdGVyO1xyXG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDhweCk7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgYm9yZGVyLXRvcDogM3B4IHNvbGlkIHYuJGNvbG9yLXRleHQtZm9uY2VzO1xyXG4gICAgcGFkZGluZzogMXJlbSAycmVtO1xyXG59XHJcbiIsIkB1c2UgJy4uL2Fic3RyYWN0cy92YXJpYWJsZXMnIGFzIHY7XHJcblxyXG5oZWFkZXIge1xyXG4gICBoMiB7XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICB9IFxyXG59XHJcblxyXG4uZGVzY3JpcHRpb25fX3dyYXBwZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNHJlbTtcclxuXHJcbiAgICBwIHtcclxuICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgIGNvbG9yOiB2LiRjb2xvci10ZXh0LWNsYWlyO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuXHJcbiAgICAgICAgLnRpdGxlLXNwYW4ge1xyXG4gICAgICAgICAgICBjb2xvcjogdi4kY29sb3ItZ29sZDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtdGl0bGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4iLCIuZ2FsZXJpZV9fd3JhcHBlciB7XHJcbiAgICAuY2FyZC1hY3Rpb25zIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgZ2FwOiAwLjVyZW07XHJcbiAgICB9XHJcbn0iLCJAdXNlICcuLi9hYnN0cmFjdHMvdmFyaWFibGVzJyBhcyB2O1xyXG5cclxuXHJcbi5jaGFpc2VfX3dyYXBwZXIge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgdi4kY29sb3ItZ29sZCA1JSwgdi4kY29sb3ItdGV4dC1jbGFpciA4MCUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICAgIHBhZGRpbmc6IDRyZW07XHJcbiAgICBtYXJnaW46IDRyZW0gYXV0bztcclxuICAgIG1heC13aWR0aDogMTAwMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAxMHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG4gICAgY29sb3I6IHYuJGNvbG9yLXRleHQtZm9uY2VzO1xyXG4gICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtcHJpbWFyeTtcclxuXHJcbiAgICBoMyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IHYuJGZvbnQtaDM7XHJcbiAgICAgICAgY29sb3I6IHYuJGNvbG9yLXRleHQtZm9uY2VzO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjFyZW07XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICAgICAgICBjb2xvcjogdi4kY29sb3ItdGV4dC1mb25jZXM7XHJcbiAgICB9XHJcblxyXG4gICAgaW1nIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCA0cHggMTJweCByZ2JhKDAsIDAsIDAsIDAuNCk7XHJcbiAgICAgICAgbWFyZ2luOiAycmVtIGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcblxyXG4gICAgLmNhcmQtYWN0aW9ucyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIG1hcmdpbjogMnJlbTtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC5jb21tZW50YWlyZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xyXG4gICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig0cHgpO1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgdi4kY29sb3ItZ29sZDtcclxuICAgICAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcblxyXG4gICAgICAgIHAge1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNtYWxsIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICBjb2xvcjogdi4kY29sb3ItdGV4dC1mb25jZXM7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBmb3JtIHtcclxuICAgICAgICB0ZXh0YXJlYSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWluLWhlaWdodDogMTAwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMXJlbTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdi4kY29sb3ItdGV4dC1mb25jZXM7XHJcbiAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExMCwgODksIDg5LCAwLjI3NCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYnRuIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuY29ubmV4aW9ue1xyXG4gICAgICAgIGNvbG9yOiB2LiRjb2xvci1yZWQ7XHJcblxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy9FVE9JTEVTXHJcbi5jaGFpc2VfX3dyYXBwZXIgI25vdGUtZm9ybSB7XHJcbiAgICBhbGw6IHVuc2V0O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nLXN0YXJzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZ2FwOiAwLjNyZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XHJcbn1cclxuXHJcbi5zdGFyLWJ0biB7XHJcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAxLjhyZW07XHJcbiAgICBjb2xvcjogI2NjYztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4uc3Rhci1idG4uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAjZjVjNTE4O1xyXG59XHJcblxyXG4uc3Rhci1idG46aG92ZXIsXHJcbi5zdGFyLWJ0bjpmb2N1cyB7XHJcbiAgICBjb2xvcjogI2Y1YzUxODtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbi5zdGFycyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogMC4zcmVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xyXG59XHJcblxyXG4uc3RhcnMgLnN0YXIge1xyXG4gICAgZm9udC1zaXplOiAxLjhyZW07XHJcbiAgICBjb2xvcjogI2NjYztcclxufVxyXG5cclxuLnN0YXJzIC5zdGFyLmFjdGl2ZSB7XHJcbiAgICBjb2xvcjogI2Y1YzUxODtcclxufVxyXG5cclxuLnN0YXJzIC5zdGFyLmhhbGYge1xyXG4gICAgY29sb3I6ICNmNWUyOTE7XHJcbn1cclxuXHJcbi5zdGFycyBzcGFuIHtcclxuICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgIGNvbG9yOiAjNjY2O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDAuNHJlbTtcclxufVxyXG5cclxuLnN0YXItYnRuLmhvdmVyIHtcclxuICAgIGNvbG9yOiAjZjVjNTE4O1xyXG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgIFxyXG4gICAvL2NhcmRcclxuICAgIC5jaGFpc2VzLWNvbnRhaW5lciB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBwYWRkaW5nOiAycmVtO1xyXG4gICAgICAgIC5jaGFpc2UtY2FyZCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBtYWluIHtcclxuICAgICAgICBwYWRkaW5nOiAycmVtO1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA4cmVtO1xyXG4gICAgfVxyXG4gICAgbmF2IC5tYWluLW5hdiB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44KTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAxMDAlO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubWFpbi1uYXYuYWN0aXZlIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmJ1cmdlciB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIC8vbmF2YmFyXHJcblxyXG4gICAgLy9kZXNjcmlwdGlvblxyXG4gICAgLmRlc2NyaXB0aW9uX193cmFwcGVyIHtcclxuICAgICAgICBwIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==*/