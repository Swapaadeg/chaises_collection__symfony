/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
@charset "UTF-8";
@font-face {
  font-family: "Baroque";
  src: url(/build/fonts/BaroqueScript.d1ef5c7f.ttf);
}
@font-face {
  font-family: "Spectral";
  src: url(/build/fonts/Spectral-Regular.3a67fe9e.ttf);
  font-weight: 400;
}
@font-face {
  font-family: "SpectralBold";
  src: url(/build/fonts/Spectral-Bold.c8ae2642.ttf);
  font-weight: 800;
}
@font-face {
  font-family: "SpectralLight";
  src: url(/build/fonts/Spectral-ExtraLightItalic.f2a93040.ttf);
  font-weight: 100;
}
@font-face {
  font-family: "Cinzel";
  src: url(/build/fonts/CinzelDecorative-Regular.c243877d.ttf);
  font-weight: 400;
}
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  list-style: none;
  text-decoration: none;
}

body {
  font-family: "Spectral";
  background-image: url(/build/images/original-black-leather-texture-background.d7509c96.jpg);
  background-position: center, center;
  background-size: contain;
  background-repeat: repeat;
  margin: 0;
  padding: 0;
}

main {
  padding: 8rem;
}

h1 {
  font-family: "Baroque";
  color: #C9A74E;
  font-size: 2.7rem;
  text-align: center;
}

h2 {
  font-size: 2rem;
  font-family: "Cinzel";
  color: #E5D8C5;
  margin-top: -1rem;
  text-align: center;
  margin-bottom: 4rem;
}

h3 {
  color: #E5D8C5;
  font-size: 1.5rem;
}

p {
  font-size: 1.1rem;
}

.logo-link {
  display: block;
  width: 100px;
}

.flash-success {
  background-color: rgba(202, 96, 46, 0.2);
  border-left: 5px solid #C9A74E;
  color: #E5D8C5;
  padding: 1rem 1.5rem;
  margin: 1rem auto;
  border-radius: 8px;
  font-weight: bold;
  max-width: 800px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  font-family: "Cinzel";
  text-align: center;
}

.flash-error {
  background-color: rgba(202, 96, 46, 0.2);
  border-left: 5px solid #C9A74E;
  color: #E5D8C5;
  padding: 1rem 1.5rem;
  margin: 1rem auto;
  border-radius: 8px;
  font-weight: bold;
  max-width: 800px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  font-family: "Cinzel";
  text-align: center;
}

.btn {
  --border-color: linear-gradient(-45deg, #7E1E1E, #C9A74E );
  --border-width: 0.125em;
  --curve-size: 0.5em;
  --blur: 30px;
  --bg: #080312;
  --color: #E5D8C5;
  color: var(--color);
  cursor: pointer;
  /* use position: relative; so that BG is only for .btn */
  position: relative;
  isolation: isolate;
  display: inline-grid;
  place-content: center;
  padding: 0.5em 1.5em;
  font-size: 17px;
  border: 0;
  text-transform: uppercase;
  box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.6);
  clip-path: polygon(0% var(--curve-size), var(--curve-size) 0, 100% 0, 100% calc(100% - var(--curve-size)), calc(100% - var(--curve-size)) 100%, 0 100%);
  transition: color 250ms;
}

.btn::after,
.btn::before {
  content: "";
  position: absolute;
  inset: 0;
}

.btn::before {
  background: var(--border-color);
  background-size: 300% 300%;
  animation: move-bg7234 5s ease infinite;
  z-index: -2;
}

.btn::after {
  background: var(--bg);
  z-index: -1;
  clip-path: polygon(var(--border-width) calc(var(--curve-size) + var(--border-width) * 0.5), calc(var(--curve-size) + var(--border-width) * 0.5) var(--border-width), calc(100% - var(--border-width)) var(--border-width), calc(100% - var(--border-width)) calc(100% - (var(--curve-size) + var(--border-width) * 0.5)), calc(100% - (var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width)), var(--border-width) calc(100% - var(--border-width)));
  transition: clip-path 500ms;
}

.btn:where(:hover, :focus)::after {
  clip-path: polygon(calc(100% - var(--border-width)) calc(100% - (var(--curve-size) + var(--border-width) * 0.5)), calc(100% - var(--border-width)) var(--border-width), calc(100% - var(--border-width)) var(--border-width), calc(100% - var(--border-width)) calc(100% - (var(--curve-size) + var(--border-width) * 0.5)), calc(100% - (var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width)), calc(100% - (var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width)));
  transition: 200ms;
}

.chaises-container {
  display: flex;
  gap: 2rem;
  flex-wrap: wrap;
  justify-content: center;
  background-image: url(/build/images/close-up-fabric-texture-detail.d54dd935.jpg);
  background-position: center, center;
  background-size: cover;
  border-radius: 50px;
  padding: 5rem;
  margin-top: 2rem;
}
.chaises-container .chaise-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  text-align: center;
  gap: 2rem;
  width: 22%;
  padding: 2rem;
  border-radius: 12px;
  background: linear-gradient(to top, #C9A74E, #E5D8C5);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease, box-shadow 0.3s ease, filter 0.3s ease;
}
.chaises-container .chaise-card h3 {
  margin: 0;
  font-size: 1.2rem;
  color: #38302E;
}
.chaises-container .chaise-card .chaise-image {
  width: 60%;
  border-radius: 50%;
}
.chaises-container .chaise-card:hover {
  transform: translateY(-10px) scale(1.02);
  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.4);
  filter: brightness(1.05);
}

form {
  font-family: "Spectral";
  max-width: 800px;
  margin: 0 auto;
  background: linear-gradient(to top, #C9A74E 5%, #E5D8C5 95%);
  padding: 3rem;
  border-radius: 12px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
}
form .form-group {
  margin-bottom: 2rem;
}
form .form-label {
  display: block;
  font-weight: bold;
  margin-bottom: 0.5rem;
  color: #38302E;
}
form .form-input, form textarea, form select {
  width: 100%;
  padding: 0.75rem;
  border-radius: 8px;
  border: 1px solid #38302E;
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1rem;
  font-family: "Spectral";
  color: #38302E;
}
form .form-input:focus, form textarea:focus, form select:focus {
  outline: none;
  border-color: #7E1E1E;
  box-shadow: 0 0 5px #7E1E1E;
}

.form-delete {
  all: unset;
}

input[type=file] {
  display: block;
  margin-top: 0.5rem;
  margin-bottom: 1rem;
  padding: 0.5rem;
  border: 2px dashed #38302E;
  border-radius: 8px;
  background-color: rgba(255, 255, 255, 0.8);
  color: #38302E;
  font-family: "Spectral";
  cursor: pointer;
  transition: border-color 0.3s ease;
}
input[type=file]:hover {
  border-color: #C9A74E;
}

.checkbox-group input[type=checkbox] {
  display: none;
}

.checkbox-group label {
  display: inline-block;
  margin: 5px;
  padding: 10px 15px;
  background-color: #E5D8C5;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.checkbox-group input[type=checkbox]:checked + label {
  background-color: #C9A74E;
  color: white;
}

.login-action {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 1rem;
}
.login-action .btn {
  margin-right: 1rem;
}
.login-action .mdp {
  font-size: 0.9rem;
  color: #38302E;
  text-decoration: underline;
  transition: color 0.3s;
}
.login-action .mdp:hover {
  color: #7E1E1E;
}

.check {
  cursor: pointer;
  position: relative;
  width: 18px;
  height: 18px;
  -webkit-tap-highlight-color: transparent;
  transform: translate3d(0, 0, 0);
}

.check:before {
  content: "";
  position: absolute;
  top: -15px;
  left: -15px;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: rgba(34, 50, 84, 0.03);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.check svg {
  position: relative;
  z-index: 1;
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke: #38302E;
  stroke-width: 1.5;
  transition: all 0.2s ease;
}

.check svg path {
  stroke-dasharray: 60;
  stroke-dashoffset: 0;
}

.check svg polyline {
  stroke-dasharray: 22;
  stroke-dashoffset: 66;
}

.check:hover:before {
  opacity: 1;
}

.check:hover svg {
  stroke: var(--accent-color, #7E1E1E);
}

#cbx2:checked + .check svg {
  stroke: var(--accent-color, #7E1E1E);
}

#cbx2:checked + .check svg path {
  stroke-dashoffset: 60;
  transition: all 0.3s linear;
}

#cbx2:checked + .check svg polyline {
  stroke-dashoffset: 42;
  transition: all 0.2s linear;
  transition-delay: 0.15s;
}

.remember-text {
  cursor: pointer;
  font-family: #38302E;
}

.note-form {
  all: unset;
}

@keyframes move-bg7234 {
  0% {
    background-position: 31% 0%;
  }
  50% {
    background-position: 70% 100%;
  }
  100% {
    background-position: 31% 0%;
  }
}
nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: fixed;
  width: 100%;
  backdrop-filter: blur(8px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-bottom: 3px solid #38302E;
  padding: 1rem 2rem;
  z-index: 10;
}
nav .left-side {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-left: 6rem;
}
nav .left-side .logo-link {
  display: block;
  width: 60px;
  transition: transform 0.9s ease;
}
nav .left-side .logo-link img {
  width: 100%;
  height: auto;
  transition: transform 0.9s ease;
}
nav .left-side .logo-link:hover img {
  transform: rotateY(180deg) scale(1.1);
  filter: drop-shadow(0 0 8px #C9A74E);
}
nav .left-side .hello {
  color: #C9A74E;
  font-size: 1.1rem;
}
nav .main-nav {
  display: flex;
  align-items: center;
  margin-right: 6rem;
  gap: 2rem;
}
nav .main-nav a {
  color: #C9A74E;
  text-decoration: none;
  font-size: 1.2rem;
  border: none;
  background: none;
}
nav .main-nav a::before {
  margin-left: auto;
}
nav .main-nav a::after, nav .main-nav a::before {
  content: "";
  width: 0%;
  height: 2px;
  background: linear-gradient(to right, #C9A74E, #7E1E1E);
  display: block;
  transition: 0.5s;
}
nav .main-nav a:hover::after, nav .main-nav a:hover::before {
  width: 100%;
}

.burger {
  display: none;
  flex-direction: column;
  cursor: pointer;
  gap: 0.4rem;
}
.burger span {
  width: 25px;
  height: 3px;
  background-color: white;
  border-radius: 2px;
  transition: all 0.3s ease;
}
.burger.open span:nth-child(1) {
  transform: rotate(45deg) translate(5px, 5px);
}
.burger.open span:nth-child(2) {
  opacity: 0;
}
.burger.open span:nth-child(3) {
  transform: rotate(-45deg) translate(5px, -5px);
}

footer {
  text-align: center;
  color: #C9A74E;
  font-family: "SpectralLight";
  backdrop-filter: blur(8px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-top: 3px solid #38302E;
  padding: 1rem 2rem;
}

header h2 {
  font-size: 1rem;
}

.description__wrapper {
  text-align: center;
  display: flex;
  justify-content: center;
  margin-bottom: 4rem;
}
.description__wrapper p {
  width: 50%;
  color: #E5D8C5;
  font-style: italic;
}
.description__wrapper p .title-span {
  color: #C9A74E;
  font-family: "Baroque";
}

.galerie__wrapper .card-actions {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.chaise__wrapper {
  background: linear-gradient(to top, #C9A74E 5%, #E5D8C5 80%);
  border-radius: 12px;
  padding: 4rem;
  margin: 4rem auto;
  max-width: 1000px;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4);
  color: #38302E;
  font-family: "Spectral";
}
.chaise__wrapper h3 {
  font-family: "Cinzel";
  color: #38302E;
  font-size: 2rem;
  margin-bottom: 1rem;
  text-transform: uppercase;
}
.chaise__wrapper p {
  font-size: 1.1rem;
  margin-bottom: 1rem;
  color: #38302E;
}
.chaise__wrapper img {
  max-width: 300px;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
  margin: 2rem auto;
  display: block;
}
.chaise__wrapper .card-actions {
  display: flex;
  flex-direction: column;
  margin: 2rem;
  justify-content: center;
  align-items: center;
}
.chaise__wrapper .commentaire {
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(4px);
  border-left: 4px solid #C9A74E;
  padding: 1rem;
  margin-bottom: 1rem;
  border-radius: 8px;
  text-align: left;
}
.chaise__wrapper .commentaire p {
  font-style: italic;
}
.chaise__wrapper .commentaire small {
  display: block;
  text-align: right;
  color: #38302E;
  font-size: 0.9rem;
}
.chaise__wrapper form textarea {
  width: 100%;
  min-height: 100px;
  padding: 1rem;
  border-radius: 8px;
  border: 1px solid #38302E;
  resize: vertical;
  background-color: rgba(110, 89, 89, 0.274);
}
.chaise__wrapper form .btn {
  margin-top: 1rem;
}
.chaise__wrapper .connexion {
  color: #7E1E1E;
}
.chaise__wrapper .connexion:hover {
  text-decoration: underline;
}

.star-btn, .moyenne-stars .star {
  font-size: 2rem;
  color: #ccc;
  cursor: pointer;
  background: none;
  border: none;
  padding: 0;
}

.star-btn.hover,
.star-btn.selected,
.moyenne-stars .star.full {
  color: #f5c518;
}

.moyenne-stars .star.half::before {
  content: "★";
  color: #f5c518;
  position: absolute;
  width: 50%;
  overflow: hidden;
  display: inline-block;
}

.moyenne-stars .star {
  position: relative;
  display: inline-block;
}

@media screen and (max-width: 1400px) {
  .chaises-container {
    flex-direction: column;
    padding: 2rem;
  }
  .chaises-container .chaise-card {
    width: 100%;
  }
  main {
    padding: 2rem;
    padding-top: 8rem;
  }
  nav .main-nav {
    display: none;
    flex-direction: column;
    background-color: rgba(0, 0, 0, 0.8);
    position: absolute;
    top: 100%;
    right: 0;
    width: 100%;
    text-align: center;
    padding: 1rem;
  }
  .main-nav.active {
    display: flex;
    margin-right: 0;
  }
  .burger {
    display: flex;
  }
}
@media screen and (max-width: 768px) {
  .description__wrapper p {
    width: 100%;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/